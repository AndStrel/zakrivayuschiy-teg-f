/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦   theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/
@supports (font-variation-settings: normal) {

  body {
    font-family: var(--font);
  }
}
.page {
  min-inline-size: 320px;
  min-block-size: 100dvb;
  font-family: var(--font);
  font-variation-settings: normal;
  background-color: var(--bg-color);
  color: var(--color);
  background-image: var(--bg-image);
  background-position: center;
  background-attachment: fixed;
  background-size: cover;
}

.content {
  width: var(--clamp-content);
  margin: auto;
  /* Я так и не понял зачем, но в соответствии с п. 1 шага 6 вынес в отдельный класс и зачем то переменную присвоил... */
}

.header {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: var(--bg-color);
  font-family: var(--acent-font);
  font-weight: var(--font-weight-normal);
  border: 2px solid var(--color);
  margin-block-start: 100px;
  margin-block-end: 100px;
}

.header__logo {
  font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
  padding-block-start: clamp(120px, 30%, 136px);
  padding-block-end: 20px;
}

.header__title {
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
  font-weight: var(--font-weight-normal);
  padding-block-end: 25px;
  text-transform: uppercase;
}

.header__theme-menu {
  padding-block-end: 25px;
  padding-inline-start: 18px;
}

.theme-menu__list {
  display: flex;
  gap: 10px;
  flex-direction: column;
}

.theme-menu__button {
  position: relative;
  background-color: transparent;
  border: none;
  font-size: var(--font-size);
  text-transform: uppercase;
  padding-inline: 0;
  text-decoration: none;
  transition: opacity 0.3s;
  cursor: pointer;
}

.theme-menu__button:hover {
  opacity: 60%;
}

.theme-menu__button:focus {
  outline: none;
  opacity: 60%;
}

.theme-menu__button::after {
  content: "";
  display: block;
  position: absolute;
  width: 0%;
  height: 2px;
  bottom: -3px;
  background-color: var(--color);
  transition: width 0.3s, opacity 0.3s;
  transition-timing-function: ease;
}

.theme-menu__button:focus-visible::after {
  width: 100%;
}

:disabled {
  position: relative;
  opacity: 60%;
  pointer-events: none;
}

:disabled::before {
  content: "▶";
  width: 14px;
  height: 14px;
  color: var(--color);
  position: absolute;
  text-indent: -36px;
  opacity: 60%;
  animation-name: active;
  animation-duration: 0.5s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: ease-in-out;
}

.main {
  display: flex;
  flex-direction: column;
  gap: 50px;
  margin-block-end: 50px;
}

.main__card {
  background-color: var(--bg-color);
  border: 2px solid var(--color);
}

.main__card-title {
  --font-size: 18px;
  font-size: var(--font-size);
  line-height: 30px;
  margin: 0 10px;
  font-weight: var(--font-weight-bold);
}

.main__card-box {
  position: relative;
  height: clamp(300px, 70vh, 700px);
}
.main__card-image {
  width: 100%;
  height: 100%;
  border-top: 2px solid var(--color);
  border-bottom: 2px solid var(--color);
  object-position: center;
  object-fit: cover;
}
.image-car {
  filter: contrast(35%);
}
.image-dog {
  filter: sepia(15%);
}
.image-happy {
  filter: saturate(190%);
}
.image-house {
  filter: hue-rotate(0.5turn);
}
.image-family {
  filter: blur(1px);
}
.image-wood {
  filter: grayscale(80%);
}
.image-brown-dog {
  filter: invert(100%);
}
.image-motivation {
  filter: contrast(75%) hue-rotate(0.5turn);
}

.main__card-watermark {
  font-family: var(--acent-font);
  font-size: var(--font-size);
  color: var(--color);
  position: absolute;
  top: 27px;
  right: 25px;
  mix-blend-mode: hard-light;
  opacity: 50%;
  text-transform: uppercase;
  text-shadow: 1px 0 var(--shadow-color), 0 1px var(--shadow-color),
    1px 0 var(--shadow-color), 0 -1px var(--shadow-color);
}

@supports (
  (text-stroke: 1px var(--shadow-color)) or
    (-webkit-text-stroke: 1px var(--shadow-color))
) {
  .main__card-watermark {
    -webkit-text-stroke: 1px var(--shadow-color);
    text-stroke: 1px var(--shadow-color);
    text-shadow: none;
  }
}

.main__card-text {
  --font-size: 18px;
  font-size: var(--font-size);
  font-weight: var(--font-weight-text);
  line-height: 21px;
  margin: 26px 25px;
}

.buttons {
  display: flex;
  justify-content: flex-end;
}

.card__icon-button {
  height: min-content;
  background-color: inherit;
  border: none;
  margin: 1px;
}

.card__icon-button:focus {
  outline: transparent;
}

.like-icon {
  outline: 2px solid transparent;
  padding-bottom: 1px;
}
.like-icon:hover {
  cursor: pointer;
}


.card__icon-button:focus-visible .like-icon {
  outline: 2px solid var(--color);
}

.button {
  font-family: var(--acent-font);
  font-size: var(--font-size);
  line-height: 18px;
  background-color: var(--bg-color);
  border: 2px solid var(--color);
  transition: box-shadow 0.3s;
  position: relative;
  overflow: hidden;
  padding: 9px 17px;
}

.button:focus {
  outline: none;
  box-shadow: 2px 2px 0 0 var(--color);
}

.card__like-button {
  min-width: 162px;
  margin: 0 25px 25px 0;
}

.card__like-button:hover {
  cursor: pointer;
}

.card__like-button::after {
  content: "";
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: var(--color);
  transform: translateX(-100%);
  inset: 0px 0px;
  transition: 0.5s;
  transition-timing-function: ease-in-out;
}

.card__like-button:hover:after {
  transform: translateX(0);
}

.button__text {
  position: relative;
  color: var(--button-color);
  z-index: 1;
  mix-blend-mode: difference;
}

.footer {
  display: flex;
  justify-content: center;
  margin-block-end: 100px;
}

.footer__button {
  padding: 15px 20px;
  z-index: 0;
}

.floppy {
  position: relative;
  color: var(--button-color);
  mix-blend-mode: difference;
  z-index: 2;
}

.footer__button:hover {
  cursor: pointer;
}

.footer__button::after {
  content: "";
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: var(--color);
  color: var(--bg-color);
  transform: translateX(-100%);
  inset: 0px 0px;
  transition: 0.5s;
  transition-timing-function: ease-in-out;
  z-index: -1;
}

.footer__button:hover:after {
  transform: translateX(0);
}

.dialog {
  border: 2px solid var(--color);
  background-color: var(--bg-color);
  color: var(--color);
  width: clamp(341px, 80%, 357px);
  padding: 30px;
}
.dialog__content {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-block-end: 30px;
}

.dialog__content-image {
  min-width: 39px;
}

.dialog__content-text {
  font-family: var(--acent-font);
  font-size: var(--font-size);
  line-height: 21px;
  font-weight: var(--font-weight-normal);
  text-transform: uppercase;
}

.dialog-button {
  width: 100%;
  text-transform: uppercase;
}

.dialog-button:hover {
  cursor: pointer;
}
.dialog-button::after {
  content: "";
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: var(--color);
  transform: translateX(-100%);
  inset: 0px 0px;
  transition: 0.5s;
  transition-timing-function: ease-in-out;
}

.dialog-button:hover:after {
  transform: translateX(0);
}

dialog:has([open]) {
  display: block;
}

body:has(dialog[open]) {
  overflow: hidden;
}

dialog::backdrop {
  background-color: rgb(0 0 0 / 0.3);
  backdrop-filter: blur(3px);
}
